name: Publish COTI Snap Package

on:
  push:
    branches:
      - main
    paths:
      - 'packages/snap/**'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  publish-snap:
    name: Build and Publish Snap
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.4'
          registry-url: 'https://registry.npmjs.org/'

      - name: Enable Corepack
        run: corepack enable

      - name: Verify Yarn version
        run: yarn --version

      - name: Install Dependencies
        run: |
          yarn install --immutable
          yarn allow-scripts

      - name: Auto-increment version
        id: version
        run: |
          cd packages/snap
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          SEMVER_VERSION=$(echo "$CURRENT_VERSION" | cut -d'-' -f1)
          MAJOR=$(echo "$SEMVER_VERSION" | cut -d. -f1)
          MINOR=$(echo "$SEMVER_VERSION" | cut -d. -f2)
          PATCH=$(echo "$SEMVER_VERSION" | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          
          COMMIT_HASH=$(git rev-parse --short=6 HEAD)
          
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH-$COMMIT_HASH"
          echo "Current version: $CURRENT_VERSION"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Install json-cli if not available
          npm install -g json
          
          # Update package.json
          json -I -f package.json -e "this.version='$NEW_VERSION'"
          
          # Update snap.manifest.json
          json -I -f snap.manifest.json -e "this.version='$NEW_VERSION'"

      - name: Build Snap
        run: |
          cd packages/snap
<<<<<<< HEAD
          yarn clean
          yarn build:mainnet
=======
          yarn build
>>>>>>> upstream/main
        env:
          SNAP_ENV: mainnet
          NODE_ENV: production

      - name: Update shasum in manifest
        run: |
          cd packages/snap
          yarn prepublishOnly

      - name: Commit version changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add packages/snap/package.json packages/snap/snap.manifest.json
          git commit -m "chore: bump snap version to ${{ steps.version.outputs.new_version }} [skip ci]" || echo "No changes to commit"
          git push

      - name: Publish to NPM
        run: |
          cd packages/snap
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          SNAP_ENV: mainnet
          NODE_ENV: production
